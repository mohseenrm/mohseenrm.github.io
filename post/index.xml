<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Mohseen</title><link>https://www.mohseen.dev/post/</link><description>Recent content in Posts on Mohseen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 07 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.mohseen.dev/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Climbing the Peaks of Advanced Frontend Development</title><link>https://www.mohseen.dev/post/2024-06-07-climbing-the-peaks-of-advanced-frontend-development/</link><pubDate>Fri, 07 Jun 2024 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2024-06-07-climbing-the-peaks-of-advanced-frontend-development/</guid><description>Frontend Development is much like scaling a mountain. As per &amp;ldquo;Building Front-End Web Apps with Plain JavaScript&amp;rdquo; by Gerd Wagner, &amp;ldquo;It might seem easily accessible but only becomes challenging and intricate as you ascend to its peaks&amp;rdquo;. It requires more than just knowing how to write HTML, CSS, and Javascript. One should harness the power of frameworks and libraries, exercise precise data handling, and master performance optimization techniques to achieve the summit.</description></item><item><title>Achieving High-Performant and Responsive User Interface: A Deep Dive</title><link>https://www.mohseen.dev/post/2024-06-03-achieving-high-performant-and-responsive-user-interface-a-deep-dive/</link><pubDate>Mon, 03 Jun 2024 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2024-06-03-achieving-high-performant-and-responsive-user-interface-a-deep-dive/</guid><description>Great user interface (UI) design elicits an emotive response, merging the gap between human thoughts and your application. An essential part of this UX fruition can be chalked down to UI performance and responsiveness. In this post, let&amp;rsquo;s take a deep dive into modern techniques, code examples, and prominent pitfalls for shaping high-performant and responsive UIs.
A Performant and Responsive UI - Why it Matters? As Google Developers states,
&amp;ldquo;Performance plays a significant role in the success of any online venture.</description></item><item><title>Mastering the Terminal: A Journey into Advanced Bash Scripting</title><link>https://www.mohseen.dev/post/2024-05-24-mastering-the-terminal-a-journey-into-advanced-bash-scripting/</link><pubDate>Fri, 24 May 2024 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2024-05-24-mastering-the-terminal-a-journey-into-advanced-bash-scripting/</guid><description>In a world filled with high-level programming languages like Python, JavaScript, and Ruby, why should one dip their toes into the arcane art of Bash scripting? Undoubtedly, Bash scripting might not be the most elegant or modern way to accomplish something programmatically, but, it provides incredible power and efficiency when working with Linux based systems. With this tutorial, we will journey beyond the mundane and into the territory of advanced scripting in Bash.</description></item><item><title>Ensuring High Performance and Responsiveness in UI: A Comprehensive Guide</title><link>https://www.mohseen.dev/post/2024-04-07-ensuring-high-performance-and-responsiveness-in-ui-a-comprehensive-guide/</link><pubDate>Sun, 07 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2024-04-07-ensuring-high-performance-and-responsiveness-in-ui-a-comprehensive-guide/</guid><description>Ensuring High Performance and Responsiveness in UI: A Comprehensive Guide Creating a high-performance and responsive user interface (UI) is quintessential for a seamless user experience. And as developers, we must continuously strive to deliver this.
&amp;ldquo;Efficiency is doing better what is already being done.&amp;rdquo; – Peter Drucker rightly said. So, how can we ensure the efficiency of our UI? Let&amp;rsquo;s dive into it!
1. Understand and Optimize Render Paths Firstly, we need to understand the process your browser goes through to convert your code into a visible layout: the render path.</description></item><item><title>Mastering Performance with Node.JS: A Comprehensive Guide</title><link>https://www.mohseen.dev/post/2024-03-29-mastering-performance-with-node-js-a-comprehensive-guide/</link><pubDate>Fri, 29 Mar 2024 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2024-03-29-mastering-performance-with-node-js-a-comprehensive-guide/</guid><description>Mastering Performance with Node.JS: A Comprehensive Guide Node.js is an incredibly versatile platform. Its flexibility and scalability lend themselves perfectly to high traffic, low latency applications. Yet, even the sharpest tools in the shed can become dull over time. Performance pitfalls are a part of every programmer&amp;rsquo;s journey, but, to paraphrase Sun Tzu, &amp;ldquo;Know your codebase, know your environment, and you need not fear the result of a hundred runtime errors&amp;rdquo; (not an actual Sun Tzu quote).</description></item><item><title>Cracking Code Complexity: A Deep Dive into Advanced Frontend Web Development</title><link>https://www.mohseen.dev/post/2024-03-24-cracking-code-complexity-a-deep-dive-into-advanced-frontend-web-development/</link><pubDate>Sun, 24 Mar 2024 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2024-03-24-cracking-code-complexity-a-deep-dive-into-advanced-frontend-web-development/</guid><description>In the dynamic world of web development, understanding the intricacies of frontend development is imperative for designing performant, user-friendly interfaces. Our today&amp;rsquo;s journey handles modern HTML5 APIs, JavaScript features, CSS magic, and complex tools which hold power to shape the art of frontend development.
Experience the compelling universe of JavaScript ES6. The introduction of let and const for better scope management and Promises and Async/Await for coping with the asynchronous nature of JS, are a few among those.</description></item><item><title>Navigating the Minefield: Avoiding Common Mistakes in TypeScript</title><link>https://www.mohseen.dev/post/2024-03-15-navigating-the-minefield-avoiding-common-mistakes-in-typescript/</link><pubDate>Fri, 15 Mar 2024 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2024-03-15-navigating-the-minefield-avoiding-common-mistakes-in-typescript/</guid><description>Ah, TypeScript&amp;hellip; where JavaScript goes to mature. As a typed superset of JavaScript, TypeScript brings static types, classes, and interfaces to the table. It&amp;rsquo;s like having a guiding hand lead you through the tumultuous journey of software development—a hand that keeps you from stepping on landmines or falling into pitfalls.
This post is about those landmines and pitfalls: anti-patterns that can hinder the performance, understandability, and maintainability of your TypeScript code if not identified early.</description></item><item><title>Unlocking Proficiency: A Comprehensive Guide to Profiling in React</title><link>https://www.mohseen.dev/post/2024-03-11-unlocking-proficiency-a-comprehensive-guide-to-profiling-in-react/</link><pubDate>Mon, 11 Mar 2024 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2024-03-11-unlocking-proficiency-a-comprehensive-guide-to-profiling-in-react/</guid><description>In the intricate realm of web development, performance is king. We all know the feeling; the slow load times, the janky UI animations, and the dreaded unresponsive script error messages. Far more than merely an annoyance, these issues can often be the difference between an app’s success or failure. Standing at the vanguard of overcoming these challenges, is the awesome power of Profiling in React.
As Brian Vaughn &amp;ndash; the developer behind React&amp;rsquo;s profiling features &amp;ndash; puts it:</description></item><item><title>Unraveling the Secrets of Profiling in NodeJS</title><link>https://www.mohseen.dev/post/2024-03-11-unraveling-the-secrets-of-profiling-in-nodejs/</link><pubDate>Mon, 11 Mar 2024 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2024-03-11-unraveling-the-secrets-of-profiling-in-nodejs/</guid><description>Greetings Interwebbers! Today, let&amp;rsquo;s embark on a journey through the lesser-known nooks and crannies of NodeJS—profiling. For those unacquainted, profiling is like doing an in-depth performance analysis of your application; think of it as taking a &amp;lsquo;health-check&amp;rsquo; of your application, identifying potential bottlenecks, areas for improvement, and optimization. Remember, saying goes - &amp;ldquo;you can&amp;rsquo;t improve what you can&amp;rsquo;t measure.&amp;rdquo;
Let&amp;rsquo;s illuminate NodeJS profiling.
Introduction to Profiling In NodeJS, we can use profiling to identify performance bottlenecks within the application.</description></item><item><title>Unleashing Performance and Responsiveness in UI Development</title><link>https://www.mohseen.dev/post/2024-02-17-unleashing-performance-and-responsiveness-in-ui-development/</link><pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2024-02-17-unleashing-performance-and-responsiveness-in-ui-development/</guid><description>Creating web applications has become more than just writing code. It&amp;rsquo;s an art, where every detail matters, especially when it comes to User Interface (UI) design. A performant and responsive UI is pivotal to user experience, ensuring users have a seamless interaction across different device screens. This blog post will guide you through creating fast and responsive UIs using modern development techniques.
Going the Extra Mile - Enhancing UI Performance UI performance significantly influences user experience and engagement.</description></item><item><title>Mastering Application Performance: A Comprehensive Guide to Profiling in React</title><link>https://www.mohseen.dev/post/2024-02-10-mastering-application-performance-a-comprehensive-guide-to-profiling-in-react/</link><pubDate>Sat, 10 Feb 2024 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2024-02-10-mastering-application-performance-a-comprehensive-guide-to-profiling-in-react/</guid><description>Ever wondered how to take your React application&amp;rsquo;s performance to the next level? Or puzzled by the application sluggishness even after adhering to the &amp;lsquo;best practices&amp;rsquo; in React? You’re not alone!
The key to optimizing any React application lies in understanding when and where to optimize. Here&amp;rsquo;s where Profiling plays a pivotal role.
What is Profiling? Profiling is a process used in application development to monitor and analyze the different aspects of software performance.</description></item><item><title>Navigating the Complex Landscape of Modern Full Stack Development</title><link>https://www.mohseen.dev/post/2024-01-12-navigating-the-complex-landscape-of-modern-full-stack-development/</link><pubDate>Fri, 12 Jan 2024 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2024-01-12-navigating-the-complex-landscape-of-modern-full-stack-development/</guid><description>The evolution of full stack development in the digital age has expanded exponentially from this niche&amp;rsquo;s humble origins. From mastering front and back-end development to integrating with DevOps, it&amp;rsquo;s a realm that continues to test developers' adaptability and problem-solving prowess.
Considered the one-stop-shop of the tech world, the full stack developer bears the responsibility of dealing with all flying arrows. As Jamie Zawinski, a prominent programmer of the early Netscape era, aptly put it,</description></item><item><title>Diving Deep Into The Depths of TypeScript: An Advanced Tutorial</title><link>https://www.mohseen.dev/post/2023-12-22-diving-deep-into-the-depths-of-typescript-an-advanced-tutorial/</link><pubDate>Fri, 22 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-12-22-diving-deep-into-the-depths-of-typescript-an-advanced-tutorial/</guid><description>Welcome to an advanced whirlwind tour through the powerful aspects of TypeScript. For those of us who’ve been enjoying the JavaScript world, TypeScript has added another layer of reliability, predictability, and functionality to our code. However, to truly power-up your development, understanding the advanced concepts of TypeScript is crucial. This tutorial serves that purpose - illuminating the path for experienced developers towards achieving mastery of TypeScript.
We will be delving into complex types, conditional types, mapped types, utilizing real-world code examples from TypeScript GitHub repository.</description></item><item><title>Enhancing Full Stack Capabilities: A Glimpse into Advanced Development Techniques</title><link>https://www.mohseen.dev/post/2023-12-15-enhancing-full-stack-capabilities-a-glimpse-into-advanced-development-techniques/</link><pubDate>Fri, 15 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-12-15-enhancing-full-stack-capabilities-a-glimpse-into-advanced-development-techniques/</guid><description>Full stack development is a comprehensive methodology widely preferred by developers due to its all-encompassing nature. By mastering both front-end and back-end technologies, full-stack developers can craft complex and robust applications.
However, it&amp;rsquo;s important to remember as Uncle Bob, a well-known software engineer, said - &amp;ldquo;The only way to go fast is to go well.&amp;rdquo; Today, we will take you on a journey through some advanced full-stack development strategies that can streamline this process and enhance the quality of your work.</description></item><item><title>Scaling the Heights with NodeJS: Unlocking High Performance</title><link>https://www.mohseen.dev/post/2023-12-08-scaling-the-heights-with-nodejs-unlocking-high-performance/</link><pubDate>Fri, 08 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-12-08-scaling-the-heights-with-nodejs-unlocking-high-performance/</guid><description>Performance is not simply an aspect of a project, it&amp;rsquo;s an essential feature. Every millisecond matters and, with that in mind, let&amp;rsquo;s delve into a comprehensive performance guide for Node.js.
Node.js is a popular server-side runtime environment for JavaScript, known for its efficiency. However, several pitfalls and caveats may hinder your application&amp;rsquo;s performance if you&amp;rsquo;re not careful. But worry not, this guide comes to your aid, providing an in-depth exploration of how to write performant, efficient Node.</description></item><item><title>Pushing the Envelope: Advanced Performance Techniques for NodeJS</title><link>https://www.mohseen.dev/post/2023-11-17-pushing-the-envelope-advanced-performance-techniques-for-nodejs/</link><pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-11-17-pushing-the-envelope-advanced-performance-techniques-for-nodejs/</guid><description>Pushing the Envelope: Advanced Performance Techniques for NodeJS NodeJS has carved out a vital place for itself in the modern web development ecosystem. Its non-blocking, event-driven architecture has opened up new horizons for backend development. But how exactly does one leverage these concepts to optimize performance in a NodeJS application? This post will provide you with several techniques designed to help you achieve just that.
The Power of Asynchrony NodeJS thrives on asynchrony.</description></item><item><title>The Power of the Shell: Unleashing the Best Command Line Utilities</title><link>https://www.mohseen.dev/post/2023-11-10-the-power-of-the-shell-unleashing-the-best-command-line-utilities/</link><pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-11-10-the-power-of-the-shell-unleashing-the-best-command-line-utilities/</guid><description>Unleashing the Best Command Line Utilities While graphical interfaces are delightful, there&amp;rsquo;s an undeniable allure to the precision and raw power of command line interfaces (CLI). CLI tools allow developers to harness their systems' full potential and streamline their workflows for mind-blowing productivity. In this blog post, we&amp;rsquo;ll delve into some of the best command-line utilities to optimize your day-to-day tasks.
1. Git The lifeblood of modern software development, git is the go-to tool for version control in today&amp;rsquo;s coding landscape.</description></item><item><title>Mastering Docker: From Basic to Advanced Techniques</title><link>https://www.mohseen.dev/post/2023-11-03-mastering-docker-from-basic-to-advanced-techniques/</link><pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-11-03-mastering-docker-from-basic-to-advanced-techniques/</guid><description>Welcome to your one-stop-shop to mastering Docker, the de facto standard to build, share, and run any application anywhere. In this article, we will delve into advanced Docker techniques, explain common pitfalls, and lay out multiple paths to achieve Docker Nirvana.
Boosting Your Builds with Multi-Stage Dockerfiles It’s a no-brainer that smaller Docker images are better - less storage consumption, faster build and deploy times, and fewer runtime issues. Docker Multistage Builds provide an effective mechanism to create lean Docker images, by allowing us to divide our build into multiple stages, each stage with its own base image.</description></item><item><title>The Art of Elegance: A Peek into the Constructive Paradigm</title><link>https://www.mohseen.dev/post/2023-10-28-the-art-of-elegance-a-peek-into-the-constructive-paradigm/</link><pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-10-28-the-art-of-elegance-a-peek-into-the-constructive-paradigm/</guid><description>In the dynamic world of coding, does the timeless quote &amp;ldquo;Less is More&amp;rdquo; apply? The purpose of this post is to introduce a software development technique that embodies this minimalist approach. It bids goodbye to traditional loops, shuns mutating state, and embraces functions as first-class citizens. Remarkably, all while managing to keep apparent complexities at bay!
This principle finds its roots stemming from the mathematical definition of a function. Famed computer scientist Peter J.</description></item><item><title>Pushing The Boundaries With Advanced Frontend Development Practices</title><link>https://www.mohseen.dev/post/2023-10-21-pushing-the-boundaries-with-advanced-frontend-development-practices/</link><pubDate>Sat, 21 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-10-21-pushing-the-boundaries-with-advanced-frontend-development-practices/</guid><description>In a continually evolving technological landscape, bridging the gap between user expectations and software capabilities has become increasingly salient. Embracing advanced frontend development practices have proven pivotal in this process. It has helped shape user-centric designs, produce blazing-fast response times, and captivate audiences with memorable digital experiences. This blog post will serve as a deep dive into some of the advanced practices, techniques, recent updates, and potential pitfalls in frontend development.</description></item><item><title>Elevating your Mastery: Redux in a Modern Context</title><link>https://www.mohseen.dev/post/2023-10-13-elevating-your-mastery-redux-in-a-modern-context/</link><pubDate>Fri, 13 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-10-13-elevating-your-mastery-redux-in-a-modern-context/</guid><description>State management - a concept that while uncomplicated at first, soon spirals into a complexity that can make even the most cool-headed developers pause for thought. Redux enforces a one-way data flow that makes it easier to understand an application’s state as a developer. Now, let&amp;rsquo;s elevate our mastery of Redux and immerse ourselves into the more advanced world of Redux.
The first step is to understand that Redux is not an architecturally-dictated library, but it is a set of tools and functions that are to be used as needed—where needed 1.</description></item><item><title>Navigating the Minefield: Uncovering Missteps in TypeScript Development</title><link>https://www.mohseen.dev/post/2023-10-11-navigating-the-minefield-uncovering-missteps-in-typescript-development/</link><pubDate>Wed, 11 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-10-11-navigating-the-minefield-uncovering-missteps-in-typescript-development/</guid><description>As TypeScript continues to gain popularity in contemporary web development, we might inadvertently fall into traps of misconceptions and non-optimal practices. These pitfalls, often referred to as &amp;ldquo;anti-patterns&amp;rdquo;, can lead to code that is hard to understand, difficult to maintain, or inefficient. As Kernighan and Pike once said in &amp;ldquo;The Practice of Programming&amp;rdquo;:
&amp;ldquo;The key to good programming is understanding what you are really trying to do, and expressing that precisely.</description></item><item><title>Supercharging Your Applications: A Guide to Optimized NodeJS</title><link>https://www.mohseen.dev/post/2023-10-09-supercharging-your-applications-a-guide-to-optimized-nodejs/</link><pubDate>Mon, 09 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-10-09-supercharging-your-applications-a-guide-to-optimized-nodejs/</guid><description>Let&amp;rsquo;s be real — as software developers, we often find ourselves seeking every opportunity to optimize the performance of our applications. And speaking of performance optimization, few environments are as influential or popular as NodeJS. According to the GitHub Octoverse 2021, JavaScript remains the most popular language, and NodeJS, its most renowned runtime, is not far behind.
Today, we&amp;rsquo;ll delve headfirst into the world of NodeJS performance optimization. So put on your coding boots and prepare yourself for an insightful journey.</description></item><item><title>Unlocking the Power of Pure Functions</title><link>https://www.mohseen.dev/post/2023-10-06-unlocking-the-power-of-pure-functions/</link><pubDate>Fri, 06 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-10-06-unlocking-the-power-of-pure-functions/</guid><description>In functional programming, one principle reigns supreme: Don&amp;rsquo;t mess with state. This principle forms the bedrock of pure functions, which eschew side effects and serve as the atomic units of code in any functional program. Today, we&amp;rsquo;ll go over the power of pure functions, how they work, and why they&amp;rsquo;re so essential for writing clean, maintainable code.
Reminiscent of &amp;ldquo;In mathematics, a function is a relation between sets that associates to every element of a first set exactly one element of the second set&amp;rdquo;1, pure functions ensure predictable results leading to more maintainable software.</description></item><item><title>Automate Publishing Blogs with GPT-4</title><link>https://www.mohseen.dev/post/2023-10-06-automate-publishing-blogs-with-gpt-4/</link><pubDate>Tue, 03 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-10-06-automate-publishing-blogs-with-gpt-4/</guid><description>Summer 2023 It&amp;rsquo;s a long summer, and AI has been a buzz ever since Chat GPT was introduced to the general public. Since then it&amp;rsquo;s been a roller coaster ride of AI advancements, and the latest one is GPT-4. While there is much heated debate on whether it&amp;rsquo;s out to replace us or turn into a skynet version of virtual overlords, I wanted to see if it&amp;rsquo;s any good at writing tech blogs.</description></item><item><title>Master the Code Beast: An Absolute Guide to Profiling in NodeJS</title><link>https://www.mohseen.dev/post/2023-10-03-master-the-code-beast-an-absolute-guide-to-profiling-in-nodejs/</link><pubDate>Tue, 03 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-10-03-master-the-code-beast-an-absolute-guide-to-profiling-in-nodejs/</guid><description>In every developer&amp;rsquo;s journey, there comes a time when an application starts knocking on the doors of performance deficiencies. You may have written clean &amp;amp; efficient code (well, most of the time at least), but server woes can put a damper on the best efforts. This guide will teach you the nuances of profiling in Node.js, helping you master those server performance issues once and for all!
As Krogh Hansen succinctly puts it, &amp;ldquo;You can&amp;rsquo;t improve what you can&amp;rsquo;t measure&amp;rdquo;[1].</description></item><item><title>Unveiling the Art of Advanced Bash Scripting</title><link>https://www.mohseen.dev/post/2023-10-03-unveiling-the-art-of-advanced-bash-scripting/</link><pubDate>Tue, 03 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-10-03-unveiling-the-art-of-advanced-bash-scripting/</guid><description>Bash scripting—an old school yet a powerhouse language, often unnoted in the high-speed coding era—still holds its ground when it comes to automating tasks, manipulating data and system administration. This post is all about leveraging Bash scripting skills from &amp;lsquo;Intermediate&amp;rsquo; to &amp;lsquo;Advanced&amp;rsquo;. We dive into advanced techniques, notable gotchas and pitfalls, and reveal coding examples that will polish your scripting skills.
Let&amp;rsquo;s start with an essential quote by the acclaimed systems architect, Brian Fox, creator of Bash:</description></item><item><title>Taming the Beast: Unravelling Anti-Patterns in TypeScript</title><link>https://www.mohseen.dev/post/2023-10-02-taming-the-beast-unravelling-anti-patterns-in-typescript/</link><pubDate>Mon, 02 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-10-02-taming-the-beast-unravelling-anti-patterns-in-typescript/</guid><description>When it comes to software development, TypeScript has gained a unique foothold in new and evolving tech stacks by offering added security layers in JavaScript development—including richer type checks, optional strict compiling, and enhanced code navigation. In other words, TypeScript is simply JavaScript that knows what types of data it&amp;rsquo;s processing.
Yet, despite its features and benefits, certain TypeScript practices can inculcate problematic patterns, commonly known as anti-patterns—essentially practices that seem helpful initially but prove unproductive or counterproductive in the long run.</description></item><item><title>Preparing to be a Dog Parent</title><link>https://www.mohseen.dev/post/2021-12-26-preparing-to-be-a-dog-parent/</link><pubDate>Sun, 26 Dec 2021 12:34:37 -0800</pubDate><guid>https://www.mohseen.dev/post/2021-12-26-preparing-to-be-a-dog-parent/</guid><description>Aloha! Today marks the first year since we rescued Rosie from a shelter, and wanted to share with you tips and useful information on how to prepare your home for a new dog. It is very exciting to welcome home a new dog, but you need to make sure you apartment or house is dog friendly and ready to go before they arrive.
Heres a quick checklist of items for you and my future self to help prepare for a new dog.</description></item><item><title>7 Reasons Config as Source of Truth is better than Code</title><link>https://www.mohseen.dev/post/2021-12-22-7-reasons-config-as-source-of-truth-is-better-than-code/</link><pubDate>Wed, 22 Dec 2021 12:28:42 -0800</pubDate><guid>https://www.mohseen.dev/post/2021-12-22-7-reasons-config-as-source-of-truth-is-better-than-code/</guid><description>Introduction Heya Folks, wanted to share a few thoughts on which is better code or config for defining features in web apps or in general any application. While it seems like a minor detail, but I strongly feel it affects how well someone can use or extend an application. For that reason, I wanted to share about 7 reasons why you should consider building features using config vs baked in code.</description></item><item><title>Decentralized Fullstack development in 2022</title><link>https://www.mohseen.dev/post/2021-12-19-decentralized-fullstack-in-2022/</link><pubDate>Sun, 19 Dec 2021 10:36:49 -0800</pubDate><guid>https://www.mohseen.dev/post/2021-12-19-decentralized-fullstack-in-2022/</guid><description>Welcome folks! Hope 2022 is going to be a great year for all of you. Today I wanted to share my thoughts on Fullstack development, how&amp;rsquo;s its evolved over the years and what the current state of decentralized fullstack development looks like.
Infamous Fullstack developer Whether its for hiring for a new position or someone fresh off a bootcamp wanting to get their hands dirty, a lot of folks gravitate towards Fullstack development.</description></item><item><title>Convert Promises to ReaderTaskEithers</title><link>https://www.mohseen.dev/post/2021-12-08-convert-promises-to-rte/</link><pubDate>Wed, 08 Dec 2021 18:58:10 -0800</pubDate><guid>https://www.mohseen.dev/post/2021-12-08-convert-promises-to-rte/</guid><description>Making Promises Functional Hey folks, this is a quick overview on how to make promises functional in fp-ts. If you&amp;rsquo;re new to fp-ts would highly recommend reading the fp-ts guide to get more familiar with the library. Before we delve into why fp-ts, and why promises are a pain to get port onto fp-ts, wanted to first walk through why functional paradigm is a good option in the first place.</description></item><item><title>Enabling Airflow API</title><link>https://www.mohseen.dev/post/2021-11-30-enabling-airflow-api/</link><pubDate>Tue, 30 Nov 2021 14:30:23 -0800</pubDate><guid>https://www.mohseen.dev/post/2021-11-30-enabling-airflow-api/</guid><description>Introduction Hey folks, previously I wrote a blog post about how to setup Airflow and how it can streamline data pipelines and a great replacement for cron tasks.
In this post I&amp;rsquo;ll go over how to enable their api to trigger dags through nodes vs manually or scheduled runs.
By default after installing Airflow, the api is disabled for all requests. From Airflow docs, a few apis are experimental and need additional security like basic auth or only accept requests from trusted ips.</description></item><item><title>Airflow Cron on Steroids</title><link>https://www.mohseen.dev/post/2021-11-17-airflow-cron-on-steroids/</link><pubDate>Wed, 17 Nov 2021 11:25:55 -0800</pubDate><guid>https://www.mohseen.dev/post/2021-11-17-airflow-cron-on-steroids/</guid><description>Airflow Airflow is a popular open-source framework for running data pipelines, but also really great at running tasks/scripts on a schedule. Cron has supported scheduling tasks for a while, but it&amp;rsquo;s really hard to configure and monitor it correctly. Fortunately for me, Airflow was a lot easier to setup DAGs (Directed Acyclic Graphs) and dependencies needed between tasks.
Overview Airflow has a few key features that make it easy to use:</description></item><item><title>Bypass IP based Rate Limits for Public APIs</title><link>https://www.mohseen.dev/post/2021-11-15-bypass-ip-based-rate-limits/</link><pubDate>Mon, 15 Nov 2021 13:13:02 -0800</pubDate><guid>https://www.mohseen.dev/post/2021-11-15-bypass-ip-based-rate-limits/</guid><description>Introduction Hello! if you have been using a few public apis that rate limit your requests, this blog post might be able to help you bypass restrictions and help mask your requests using free proxies. Warning, please be aware this uses free proxies for making requests, please use more reliable proxy services or different retry methods before using in a production environment. That being said, hope this helps you if you are being blocked by you location and would need a reliable way to bypass rate limits.</description></item><item><title>Using RNN for Predicting Closing Prices</title><link>https://www.mohseen.dev/post/2021-11-12-using-rnn-for-predicting-closing-prices/</link><pubDate>Fri, 12 Nov 2021 12:09:02 -0800</pubDate><guid>https://www.mohseen.dev/post/2021-11-12-using-rnn-for-predicting-closing-prices/</guid><description>Introduction Heyo there! with a lot of buzz going around machine learning and deep learning, I wanted to try out using a RNN (Recurrent neural network) model to see how well it can predict the closing price of a cryptocurrency. Machine learning models have gotten really good at modeling real world data, so I wanted to see how well it can do with predicting crypto movements after training it with historical data.</description></item></channel></rss>