<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Mohseen</title><link>https://www.mohseen.dev/post/</link><description>Recent content in Posts on Mohseen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 03 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.mohseen.dev/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Automate Publishing Blogs with GPT-4</title><link>https://www.mohseen.dev/post/2023-10-06-automate-publishing-blogs-with-gpt-4/</link><pubDate>Tue, 03 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-10-06-automate-publishing-blogs-with-gpt-4/</guid><description>Summer 2023 It&amp;rsquo;s a long summer, and AI has been a buzz ever since Chat GPT was introduced to the general public. Since then it&amp;rsquo;s been a roller coaster ride of AI advancements, and the latest one is GPT-4. While there is much heated debate on whether it&amp;rsquo;s out to replace us or turn into a skynet version of virtual overlords, I wanted to see if it&amp;rsquo;s any good at writing tech blogs.</description></item><item><title>Master the Code Beast: An Absolute Guide to Profiling in NodeJS</title><link>https://www.mohseen.dev/post/2023-10-03-master-the-code-beast-an-absolute-guide-to-profiling-in-nodejs/</link><pubDate>Tue, 03 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-10-03-master-the-code-beast-an-absolute-guide-to-profiling-in-nodejs/</guid><description>In every developer&amp;rsquo;s journey, there comes a time when an application starts knocking on the doors of performance deficiencies. You may have written clean &amp;amp; efficient code (well, most of the time at least), but server woes can put a damper on the best efforts. This guide will teach you the nuances of profiling in Node.js, helping you master those server performance issues once and for all!
As Krogh Hansen succinctly puts it, &amp;ldquo;You can&amp;rsquo;t improve what you can&amp;rsquo;t measure&amp;rdquo;[1].</description></item><item><title>Unveiling the Art of Advanced Bash Scripting</title><link>https://www.mohseen.dev/post/2023-10-03-unveiling-the-art-of-advanced-bash-scripting/</link><pubDate>Tue, 03 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-10-03-unveiling-the-art-of-advanced-bash-scripting/</guid><description>Bash scripting—an old school yet a powerhouse language, often unnoted in the high-speed coding era—still holds its ground when it comes to automating tasks, manipulating data and system administration. This post is all about leveraging Bash scripting skills from &amp;lsquo;Intermediate&amp;rsquo; to &amp;lsquo;Advanced&amp;rsquo;. We dive into advanced techniques, notable gotchas and pitfalls, and reveal coding examples that will polish your scripting skills.
Let&amp;rsquo;s start with an essential quote by the acclaimed systems architect, Brian Fox, creator of Bash:</description></item><item><title>Taming the Beast: Unravelling Anti-Patterns in TypeScript</title><link>https://www.mohseen.dev/post/2023-10-02-taming-the-beast-unravelling-anti-patterns-in-typescript/</link><pubDate>Mon, 02 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.mohseen.dev/post/2023-10-02-taming-the-beast-unravelling-anti-patterns-in-typescript/</guid><description>When it comes to software development, TypeScript has gained a unique foothold in new and evolving tech stacks by offering added security layers in JavaScript development—including richer type checks, optional strict compiling, and enhanced code navigation. In other words, TypeScript is simply JavaScript that knows what types of data it&amp;rsquo;s processing.
Yet, despite its features and benefits, certain TypeScript practices can inculcate problematic patterns, commonly known as anti-patterns—essentially practices that seem helpful initially but prove unproductive or counterproductive in the long run.</description></item><item><title>Preparing to be a Dog Parent</title><link>https://www.mohseen.dev/post/2021-12-26-preparing-to-be-a-dog-parent/</link><pubDate>Sun, 26 Dec 2021 12:34:37 -0800</pubDate><guid>https://www.mohseen.dev/post/2021-12-26-preparing-to-be-a-dog-parent/</guid><description>Aloha! Today marks the first year since we rescued Rosie from a shelter, and wanted to share with you tips and useful information on how to prepare your home for a new dog. It is very exciting to welcome home a new dog, but you need to make sure you apartment or house is dog friendly and ready to go before they arrive.
Heres a quick checklist of items for you and my future self to help prepare for a new dog.</description></item><item><title>7 Reasons Config as Source of Truth is better than Code</title><link>https://www.mohseen.dev/post/2021-12-22-7-reasons-config-as-source-of-truth-is-better-than-code/</link><pubDate>Wed, 22 Dec 2021 12:28:42 -0800</pubDate><guid>https://www.mohseen.dev/post/2021-12-22-7-reasons-config-as-source-of-truth-is-better-than-code/</guid><description>Introduction Heya Folks, wanted to share a few thoughts on which is better code or config for defining features in web apps or in general any application. While it seems like a minor detail, but I strongly feel it affects how well someone can use or extend an application. For that reason, I wanted to share about 7 reasons why you should consider building features using config vs baked in code.</description></item><item><title>Decentralized Fullstack development in 2022</title><link>https://www.mohseen.dev/post/2021-12-19-decentralized-fullstack-in-2022/</link><pubDate>Sun, 19 Dec 2021 10:36:49 -0800</pubDate><guid>https://www.mohseen.dev/post/2021-12-19-decentralized-fullstack-in-2022/</guid><description>Welcome folks! Hope 2022 is going to be a great year for all of you. Today I wanted to share my thoughts on Fullstack development, how&amp;rsquo;s its evolved over the years and what the current state of decentralized fullstack development looks like.
Infamous Fullstack developer Whether its for hiring for a new position or someone fresh off a bootcamp wanting to get their hands dirty, a lot of folks gravitate towards Fullstack development.</description></item><item><title>Convert Promises to ReaderTaskEithers</title><link>https://www.mohseen.dev/post/2021-12-08-convert-promises-to-rte/</link><pubDate>Wed, 08 Dec 2021 18:58:10 -0800</pubDate><guid>https://www.mohseen.dev/post/2021-12-08-convert-promises-to-rte/</guid><description>Making Promises Functional Hey folks, this is a quick overview on how to make promises functional in fp-ts. If you&amp;rsquo;re new to fp-ts would highly recommend reading the fp-ts guide to get more familiar with the library. Before we delve into why fp-ts, and why promises are a pain to get port onto fp-ts, wanted to first walk through why functional paradigm is a good option in the first place.</description></item><item><title>Enabling Airflow API</title><link>https://www.mohseen.dev/post/2021-11-30-enabling-airflow-api/</link><pubDate>Tue, 30 Nov 2021 14:30:23 -0800</pubDate><guid>https://www.mohseen.dev/post/2021-11-30-enabling-airflow-api/</guid><description>Introduction Hey folks, previously I wrote a blog post about how to setup Airflow and how it can streamline data pipelines and a great replacement for cron tasks.
In this post I&amp;rsquo;ll go over how to enable their api to trigger dags through nodes vs manually or scheduled runs.
By default after installing Airflow, the api is disabled for all requests. From Airflow docs, a few apis are experimental and need additional security like basic auth or only accept requests from trusted ips.</description></item><item><title>Airflow Cron on Steroids</title><link>https://www.mohseen.dev/post/2021-11-17-airflow-cron-on-steroids/</link><pubDate>Wed, 17 Nov 2021 11:25:55 -0800</pubDate><guid>https://www.mohseen.dev/post/2021-11-17-airflow-cron-on-steroids/</guid><description>Airflow Airflow is a popular open-source framework for running data pipelines, but also really great at running tasks/scripts on a schedule. Cron has supported scheduling tasks for a while, but it&amp;rsquo;s really hard to configure and monitor it correctly. Fortunately for me, Airflow was a lot easier to setup DAGs (Directed Acyclic Graphs) and dependencies needed between tasks.
Overview Airflow has a few key features that make it easy to use:</description></item><item><title>Bypass IP based Rate Limits for Public APIs</title><link>https://www.mohseen.dev/post/2021-11-15-bypass-ip-based-rate-limits/</link><pubDate>Mon, 15 Nov 2021 13:13:02 -0800</pubDate><guid>https://www.mohseen.dev/post/2021-11-15-bypass-ip-based-rate-limits/</guid><description>Introduction Hello! if you have been using a few public apis that rate limit your requests, this blog post might be able to help you bypass restrictions and help mask your requests using free proxies. Warning, please be aware this uses free proxies for making requests, please use more reliable proxy services or different retry methods before using in a production environment. That being said, hope this helps you if you are being blocked by you location and would need a reliable way to bypass rate limits.</description></item><item><title>Using RNN for Predicting Closing Prices</title><link>https://www.mohseen.dev/post/2021-11-12-using-rnn-for-predicting-closing-prices/</link><pubDate>Fri, 12 Nov 2021 12:09:02 -0800</pubDate><guid>https://www.mohseen.dev/post/2021-11-12-using-rnn-for-predicting-closing-prices/</guid><description>Introduction Heyo there! with a lot of buzz going around machine learning and deep learning, I wanted to try out using a RNN (Recurrent neural network) model to see how well it can predict the closing price of a cryptocurrency. Machine learning models have gotten really good at modeling real world data, so I wanted to see how well it can do with predicting crypto movements after training it with historical data.</description></item></channel></rss>